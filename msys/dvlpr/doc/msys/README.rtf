{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f16\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f33\froman\fcharset238\fprq2 Times New Roman CE;}{\f34\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f36\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f37\froman\fcharset162\fprq2 Times New Roman Tur;}{\f38\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f45\fmodern\fcharset238\fprq1 Courier New CE;}{\f46\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f48\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f49\fmodern\fcharset162\fprq1 Courier New Tur;}{\f50\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f129\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f130\fmodern\fcharset204\fprq1 Lucida Console Cyr;}
{\f132\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f133\fmodern\fcharset162\fprq1 Lucida Console Tur;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext15 header;}{\s16\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid 
\sbasedon0 \snext16 footer;}}{\info{\author OMNIBOOK 500}{\operator OMNIBOOK 500}{\creatim\yr2002\mo5\dy5\hr8\min53}{\revtim\yr2002\mo8\dy15\hr12\min3}{\version7}{\edmins78}{\nofpages3}{\nofwords1153}{\nofchars6574}{\*\company Qwest Communications Corp.}
{\nofcharsws8073}{\vern113}}\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind1\viewscale100 \fet0\sectd \psz1\linex0\titlepg\sectdefaultcl {\header \pard\plain \nowidctlpar\tx2610\adjustright \fs20\cgrid {\b\i\f2\cgrid0 File:}{\i\f2\cgrid0 \tab }{\f2\cgrid0 
README
\par }{\b\i\f2\cgrid0 Copyright (C):}{\f2\cgrid0 \tab 2001, 2002  Earnie Boyd  <earnie@users.sf.net>
\par }{\b\i\f2\cgrid0 Distribution:}{\f2\cgrid0 \tab See MSYS_LICENSE
\par }{\b\i\f2\cgrid0 MSYS Revision:}{\f2\cgrid0 \tab @VERSION@
\par }{\b\i\f2\cgrid0 MSYS Revision date:}{\i\f2\cgrid0 \tab }{\field{\*\fldinst {\f2\cgrid0  TIME \\@ "MMMM d, yyyy" }}{\fldrslt {\f2\lang1024\cgrid0 August 15, 2002}}}{\f2\cgrid0 
\par }\pard \qc\nowidctlpar\tx2610\adjustright {\i\f2\cgrid0 Page }{\field{\*\fldinst {\i\f2\cgrid0  PAGE }}{\fldrslt {\i\f2\lang1024\cgrid0 2}}}{\i\f2\cgrid0  of }{\field{\*\fldinst {\i\f2\cgrid0  NUMPAGES }}{\fldrslt {\i\f2\lang1024\cgrid0 1}}}{\i\f2\cgrid0 

\par }\pard\plain \s15\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid {
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\tx2610\adjustright \fs20\cgrid {\b\i\f2\cgrid0 File:}{\i\f2\cgrid0 \tab }{\f2\cgrid0 README
\par }{\b\i\f2\cgrid0 Copyright (C):}{\f2\cgrid0 \tab 2001, 2002  Earnie Boyd  <earnie@users.sf.net>
\par }{\b\i\f2\cgrid0 Distribution:}{\f2\cgrid0 \tab See MSYS_LICENSE
\par }{\b\i\f2\cgrid0 MSYS Revision:}{\f2\cgrid0 \tab @VERSION@
\par }{\b\i\f2\cgrid0 MSYS Revision date:}{\i\f2\cgrid0 \tab }{\field{\*\fldinst {\f2\cgrid0  TIME \\@ "MMMM d, yyyy" }}{\fldrslt {\f2\lang1024\cgrid0 August 15, 2002}}}{\f2\cgrid0 
\par }\pard \qc\nowidctlpar\tx2610\adjustright {\i\f2\cgrid0 
\par }\pard \nowidctlpar\adjustright {\b\i\f2\cgrid0 Preface:}{\f2\cgrid0 
\par Ok, you have in
stalled msys and now you're reading this to understand how to get started.  However, I must first explain some important facts about Msys.  Msys file system bindings (mounts) are automatic and happens as described in table 1.  These automatic file system 
bindings are not changable by the user.  User defined file system bindings can be created by specifying them in the /etc/fstab directory as explained in table 2.
\par 
\par }{\b\i\f2\cgrid0 TABLE 1 - Automatic file system maps:}{\f2\cgrid0 
\par }{\f16\fs16\cgrid0 + ---------------------------------------------------------------------------- +
\par | The automatic mounts are relative to where the msys-1.0.dll (DLL) is located |
\par | such that the following is true:                                             |
\par |                                                                              |
\par | / - is the parent directory of the directory containing the DLL              |
\par | /bin - the direcotry containing the DLL                                      |
\par | /usr - the parent directory of the directory containing the DLL              |
\par | /usr/bin - the directory containing the DLL                                  |
\par | /tmp - the value of the TMP environment variable                             |
\par | /c - C:\\                                                                     |
\par | /d - D:\\                                                                     |
\par | . . .                                                                        |
\par | /z - Z:\\                                                                     |
\par |                                                                              |
\par + ---------------------------------------------------------------------------- +
\par }{\f2\cgrid0 
\par }{\b\i\f2\cgrid0 TABLE 2 - /etc/fstab layout:}{\f2\cgrid0 
\par }{\f16\fs16\cgrid0 + ---------------------------------------------------------------------------- +
\par | The record format for the /etc/fstab is current a simple one.  I need to     |
\par | work on the syntax parsing more so that things like embedded spaces work.    |
\par | If you wish to map a path with spaces you must use the DOS style name.       |
\par |                                                                              |
\par | The record format is as follows:                                             |
\par | d:/some/foo/path /bar                                                        |
\par |                                                                              |
\par | As you can see this is simply the Win32 path mapped to a mount point.  It is |
\par | unix practice to have the /bar created as an empty directory before it can   |
\par | mount the mount point.  Msys doesn't force this but it will be to advantage  |
\par | if you do.  Some programs, e.g. find, and some operations, e.g. tab          |
\par | operate better if the physical directory is present for those mount points.  |
\par |                                                                              |
\par | If you create a /etc/fstab record that maps to an automatic mount point Msys |
\par | will remove it when it adds the automatic point.  This means that at some    |
\par | small moment in time your mount point actually exists.  However it doesn't   |
\par | exist long enough to be of any use to you.                                   |
\par |                                                                              |
\par + ---------------------------------------------------------------------------- +
\par }{\f2\cgrid0 
\par Msys will convert POSIX paths that are used as arguments to Win32 paths.  This is done for any executable not in /bin and /usr/bin.  If the executable is dependant on the msys-1.0.dll then it must be located in the /bin or /usr/bin dir
ectory.  This means that you now have a POSIX environment that will automagically do the right thing w.r.t. changing the paths passed as arguments.  Arguments beginning with a // are considered to be Win32 style switches and will be passed to the program 
with // converted to / to allow for the command.com/cmd.exe (Win32) style switch.  An example of a Win32 style switch is `write //p /mydocs/msys-rocks.'  In this example write (a.k.a. WordPad) exists in the c:\\winnt\\
system32 path on my system.  The //p becomes /p which tells write to print the document.  And mydocs/msys-rocks converts to c:\\msys\\1.0\\mydocs\\msys-rocks so that write can find it.  
\par }{\b\i\f2\cgrid0 
\par STARTING Msys:
\par }{\f2\cgrid0 Starting Msys should now just be 
a matter of clicking on the MSYS icon on your desktop or Start menu.  If you have the File Manager window open, you may now click on it and have it start also.  Doing these presents you with a console window within which you may enter commands.
\par 
\par }{\b\i\f2\cgrid0 Working with MinGW:
\par }{\f2\cgrid0 If you already have MinGW installed then simply bind the path to MinGW to the /mingw mount point in the /etc/fstab as described above.  If you don\rquote 
t have MinGW installed already then simply unarchive the MinGW tar.gz file in the /mingw directory.  }{\b\f2\ul\highlight7\cgrid0 DO NOT}{\f2\cgrid0  unarchive the MinGW tar.gz file in the / directory.
\par }{\b\i\f2\cgrid0 
\par Working with other products:
\par }{\f2\cgrid0 I find that the easiest thing for working with other products, such as Microsoft Office, is to create a script pointing to the executable.  An example of a script fo
r Microsoft Word on my system looks like the example in Table 3.  I have this stored in my /usr/local/bin directory with a filename of word.  Now all I need to do to edit a word document is `word /mydoc/proposal.doc\rquote 
 and voila up pops a Microsoft Word window with my document in it.
\par 
\par }{\b\i\f2\cgrid0 Table 3 - Script to execute MS Word from the command line:
\par }{\f16\fs16\cgrid0 + ---------------------------------------------------------------------------- +
\par + #!/bin/sh                                                                    +
\par + start '/c/Program\\ Files/Microsoft\\ Office/Office/WINWORD' $@                +
\par + ---------------------------------------------------------------------------- +
\par }{\b\i\f2\cgrid0 
\par Other documentation:}{\f2\cgrid0 
\par Be sure to read the MSYS_ series.  I have tried to document how I'm changing the cygwin code to allow us to use it with MSYS.  These can be found in the /doc/msys directory, or you can find them in the /usr/doc/msys directory.
\par 
\par }{\b\i\f2\cgrid0 Using binaries with different runtimes:}{\f2\cgrid0 
\par You can't use Cygwin binaries at all and if you try you\rquote ll most likely just cause the processes to \ldblquote hang\rdblquote 
.  You can use Win32 native binaries but you should put them into the /mingw/bin or your /usr/local/bin directory tree.  If you wish to replace an MSYS binary with a native win32 version then delete the /bin version.
\par 
\par }{\b\i\f2\cgrid0 Bug Reports:}{\f2\cgrid0 
\par Send your bug reports to MinGW-msys@lists.sf.net.
\par 
\par }{\b\i\f2\cgrid0 User Posts:}{\f2\cgrid0 
\par MinGW-msys@lists.sf.net
\par 
\par }{\b\i\f2\cgrid0 Disclaimer:
\par }{\f2\cgrid0 Products mentioned in this and other documents are solely owned by their trademark owners.  We cla
im no rights to those trademarks and any mention of those products are for example only.  Your uses of those products are your responsibility and no endorsement of any mentioned product is being given.
\par 
\par }{\b\i\f2\cgrid0 Change History:
\par }{\f2\cgrid0 Version 1.0.3 added checks for paths following an `=' and `-X' where X
\par is a program switch.
\par 
\par Version 1.0.4 added symlink resolution, removed the dependancy that the pathmust begin with a / and removed bash.exe since sh.exe is bash.exe anyway.  Also added diff, diff3 and head to the distribution.  An MSYS icon exists in the rxvt binary.
\par 
\par Version 1.0.5 is a bug fix release that filters out the conversion of quoted relative paths.  So that -DSOME_CONSTANT=\\"1.0.5\\" can be properly input into gcc.  Also fixed the problem with sh.exe reading /etc/profile with \\r\\
n line endings.  Added the binaries true.exe, false.exe, tail.exe and fold.exe.  Updated the gmake binary to the Cygwin version including the --win32 switch.  I am suggesting to use this version of make a
nd have copied /bin/gmake.exe to /bin/make (yes without the .exe).  If you wish to go back to the "native" version of make typing make.exe will get you there.
\par 
\par Version 1.0.6 through current: See the appropriate MSYS-<version>-changes.rtf document.
\par }}