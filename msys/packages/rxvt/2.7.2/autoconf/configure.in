dnl# -*- sh -*-
dnl#
dnl# $Id: configure.in,v 1.2 2005/07/05 17:56:35 earnie Exp $
dnl#
dnl# Process this file with autoconf to produce a configure script.
dnl#
AC_INIT(src/feature.h)
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_HEADER(config.h:autoconf/config.h.in)

dnl RXVT version
VERSION=`sed -n -e 's/^.*VERSION.*"\(.*\)"$/\1/p' ${srcdir}/src/version.h`
DATE=`sed -n -e 's/^.*[ \t]*DATE.*"\(.*\)"$/\1/p' ${srcdir}/src/version.h`
LSMDATE=`sed -n -e 's/^.*LSMDATE.*"\(.*\)"$/\1/p' ${srcdir}/src/version.h`
AC_SUBST(VERSION)dnl 
AC_SUBST(DATE)dnl 
AC_SUBST(LSMDATE)dnl 
echo "configuring for rxvt $VERSION"

MALLOC_TYPE=S
support_addstrings=no
support_frills=no
support_graphics=no
support_inheritpixmap=no
support_keepscrolling=no
support_menubar=no 
support_mousewheel=no
support_oldselection=no
support_utmp=no
support_wtmp=no
support_lastlog=no
support_xim=no
support_xpm=no

dnl# --------------------------------------------------------------------------
dnl# CHECKING COMMAND LINE OPTIONS
dnl# --------------------------------------------------------------------------
multichar_set=no
AC_ARG_ENABLE(everything,
  [  --enable-everything     enable standard non-multichoice features: marked *],
  [if test x$enableval = xyes; then
    support_graphics=yes
    support_inheritpixmap=yes
    support_keepscrolling=yes
    support_menubar=yes
    support_mousewheel=yes
    support_oldselection=yes
    support_utmp=yes
    support_wtmp=yes
    support_lastlog=yes
    support_xim=yes
    support_xpm=yes
  fi])

AC_ARG_ENABLE(languages,
  [  --enable-languages      enable multichar glyph language support],
  [if test x$enableval = xyes; then
    AC_DEFINE(MULTICHAR_SET) multichar_set=yes
  fi])

AC_ARG_WITH(encoding,
  [  --with-encoding=NAME    set language default encoding to NAME
                          (eucj|sjis|big5|gb|euckr)],
  [if test x$enableval = xyes; then
    withval=`echo $withval | tr '[a-z]' '[A-Z]'`
    AC_DEFINE_UNQUOTED(MULTICHAR_ENCODING,$withval)
  fi])

AC_ARG_ENABLE(utmp,
  [  --enable-utmp           enable utmp/utmpx support                            *],
  [if test x$enableval = xyes; then
    support_utmp=yes
  fi])

AC_ARG_ENABLE(wtmp,
  [  --enable-wtmp           enable wtmp support if you have utmp/utmpx support   *],
  [if test x$enableval = xyes; then
    support_wtmp=yes
  fi])

AC_ARG_ENABLE(lastlog,
  [  --enable-lastlog        enable lastlog support if you have utmp/utmpx support*],
  [if test x$enableval = xyes; then
    support_lastlog=yes
  fi])

AC_ARG_ENABLE(xpm-background,
  [  --enable-xpm-background enable XPM background pixmaps                        *],
  [if test x$enableval = xyes; then
    support_xpm=yes
  fi])

AC_ARG_ENABLE(transparency,
  [  --enable-transparency   enable transparent backgrounds                       *],
  [if test x$enableval = xyes; then
    support_inheritpixmap=yes
  fi])

AC_ARG_ENABLE(menubar,
  [  --enable-menubar        enable Menubar                                       *],
  [if test x$enableval = xyes; then
    support_menubar=yes
  fi])

AC_ARG_ENABLE(graphics,
  [  --enable-graphics       enable rxvt own graphics mode (see src/graphics)     *],
  [if test x$enableval = xyes; then
    support_graphics=yes
  fi])

AC_ARG_ENABLE(next-scroll,
  [  --enable-next-scroll    enable NeXT style scrollbar],
  [if test x$enableval = xyes; then
    AC_DEFINE(NEXT_SCROLLBAR)
  fi])

AC_ARG_ENABLE(xterm-scroll,
  [  --enable-xterm-scroll   revert to Xterm style scrollbar],
  [if test x$enableval = xyes; then
    AC_DEFINE(XTERM_SCROLLBAR)
  fi])

AC_ARG_ENABLE(half-shadow,
  [  --enable-half-shadow    use half width/height shadows on non-Xterm scrollbar],
  [if test x$enableval = xyes; then
    AC_DEFINE(HALFSHADOW)
  fi])

AC_ARG_ENABLE(xim,
  [  --enable-xim            XIM (X Input Method) protocol support                *],
  [if test x$enableval = xyes; then
    support_xim=yes
  fi])

AC_ARG_ENABLE(greek,
  [  --enable-greek          enable greek keyboard support],
  [if test x$enableval = xyes; then
    AC_DEFINE(GREEK_SUPPORT)
    OBJGRKELOT="grkelot.o"
  fi])

AC_ARG_ENABLE(ttygid,
  [  --enable-ttygid         enable tty setting to group \"tty\" - use only if
                          your system uses this type of security],
  [if test x$enableval = xyes; then
    AC_DEFINE(TTY_GID_SUPPORT)
  fi])

AC_ARG_ENABLE(backspace-key,
  [  --disable-backspace-key disable handling of the backspace key],
  [if test x$enableval = xno; then
    AC_DEFINE(NO_BACKSPACE_KEY)
  fi])

AC_ARG_ENABLE(delete-key,
  [  --disable-delete-key    disable handling of the delete key],
  [if test x$enableval = xno; then
    AC_DEFINE(NO_DELETE_KEY)
  fi])

AC_ARG_ENABLE(resources,
  [  --disable-resources     disable all resource checking],
  [if test x$enableval = xno; then
    AC_DEFINE(NO_RESOURCES)
  fi])

AC_ARG_ENABLE(xgetdefault,
  [  --enable-xgetdefault    enable resources via X instead of our small version],
  [if test x$enableval = xyes; then
    AC_DEFINE(USE_XGETDEFAULT)
  fi])

AC_ARG_ENABLE(strings,
  [  --enable-strings        enable some replacement system functions],
  [if test x$enableval = xyes; then
    support_addstrings=yes
  fi])

AC_ARG_ENABLE(swapscreen,
  [  --disable-swapscreen    disable swap screen support],
  [if test x$enableval = xno; then
    AC_DEFINE(NO_SECONDARY_SCREEN)
  fi])

AC_ARG_ENABLE(frills,
  [  --enable-frills         enable support for rarely used features              *],
  [if test x$enableval = xyes; then
    support_frills=yes
  fi])

AC_ARG_ENABLE(keepscrolling,
  [  --enable-keepscrolling  enable continual scrolling on scrollbar arrow press  *],
  [if test x$enableval = xyes; then
    support_keepscrolling=yes
  fi])

AC_ARG_ENABLE(mousewheel,
  [  --enable-mousewheel     enable scrolling via mouse wheel or buttons 4 & 5    *],
  [if test x$enableval = xyes; then
    support_mousewheel=yes
  fi])

AC_ARG_ENABLE(old-selection,
  [  --enable-old-selection  enable v2.20 (& prior) mouse selection style support *],
  [if test x$enableval = xyes; then
    oldselection=yes
  fi])

AC_ARG_ENABLE(new-selection,
  [  --disable-new-selection disable new mouse selection style (like xterm) support],
  [if test x$enableval = xno; then
    AC_DEFINE(NO_NEW_SELECTION)
  fi])

AC_ARG_ENABLE(dmalloc,
  [  --enable-dmalloc        enable Gray Watson's malloc - for debugging use],
  [if test x$enableval = xyes; then
    MALLOC_TYPE=G
    DEBUG=-DDEBUG_MALLOC
    DLIB="-L/usr/local/lib -ldmalloc"
    DINCLUDE=-I/usr/local/include
  fi])

AC_ARG_ENABLE(dlmalloc,
  [  --enable-dlmalloc       enable Doug Lea's malloc - for production use
                          - enable only one malloc package],
  [if test x$enableval = xyes; then
    MALLOC_TYPE=D
    DEBUG=
    DLIB="-L/usr/local/lib -ldlmalloc"
    DINCLUDE=
  fi])

AC_ARG_WITH(term,
  [  --with-term=NAME        set the terminal to NAME (default \"xterm\")],
  [if test x$withval != x; then
    AC_DEFINE_UNQUOTED(TERMENV,"$withval") term="$withval"
  fi])

AC_ARG_WITH(terminfo,
  [  --with-terminfo=PATH    set the path to the terminfo tree to PATH],
  [if test x$withval != x; then
    AC_DEFINE_UNQUOTED(RXVT_TERMINFO,"$withval") terminfo="$withval"
  fi])

dnl# --------------------------------------------------------------------------
dnl# now add and remove other stuff
dnl# --------------------------------------------------------------------------
if test x$support_graphics = xyes; then
  AC_DEFINE(RXVT_GRAPHICS)
  OBJGRAPHICS="graphics.o"
fi
if test x$support_inheritpixmap = xyes; then
  AC_DEFINE(TRANSPARENT)
fi
if test x$support_keepscrolling = xno; then
  AC_DEFINE(NO_SCROLLBAR_BUTTON_CONTINUAL_SCROLLING)
fi
if test x$support_menubar = xyes; then
  AC_DEFINE(MENUBAR)
  OBJMENUBAR="menubar.o"
fi
if test x$support_frills = xno; then
  AC_DEFINE(NO_FRILLS)
fi
if test x$support_mousewheel = xyes; then
  AC_DEFINE(NO_MOUSE_WHEEL)
fi
if test x$support_oldselection = xno; then
  AC_DEFINE(NO_OLD_SELECTION)
fi
if test x$support_utmp = xyes; then
  AC_DEFINE(UTMP_SUPPORT)
  OBJLOGGING="logging.o"
fi
if test x$support_wtmp = xyes; then
  AC_DEFINE(WTMP_SUPPORT)
fi
if test x$support_lastlog = xyes; then
  AC_DEFINE(LASTLOG_SUPPORT)
fi
if test x$support_xim = xyes -o x$multichar_set = xyes; then
  AC_DEFINE(USE_XIM)
fi
if test x$support_xpm = xyes; then
  AC_DEFINE(XPM_BACKGROUND)
  OBJXPM="xpm.o"
fi

dnl# --------------------------------------------------------------------------

AC_DEFINE(PROTOTYPES)

dnl# --------------------------------------------------------------------------
dnl# Supply default CFLAGS, if not specified by `CFLAGS=flags ./configure'
dnl#
if test -z "$CFLAGS"; then
    if test -z "$CCOPTS"; then
	CCOPTS='-O'
dnl>	if test "x$GCC" = xyes; then
dnl>	    if test x$system = xLinux; then
dnl>		CCOPTS="$CCOPTS "'-O2 -fno-strength-reduce'
dnl>	    fi
dnl>	fi
    fi
    CFLAGS="$CCOPTS"
fi

dnl# Checks for programs.
dnl AC_MAKE_SET

AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

AC_PATH_PROG(MV, mv, mv)
AC_PATH_PROG(RM, rm, rm)
AC_PATH_PROG(CP, cp, cp)
AC_PATH_PROG(SED, sed, sed)
AC_PATH_PROG(AWK, awk, awk)
AC_PATH_PROG(ECHO, echo, echo)
AC_PATH_PROG(CMP, cmp, cmp)
AC_PATH_PROG(TBL, tbl, tbl)

dnl# system hacks
AC_AIX
AC_ISC_POSIX

dnl# need a neat way to detect SVR4 or its features
dnl# in src/command.c we use these functions:
dnl# grantpt(), unlockpt(), ptsname(), which are defined in <sys/ptms.h>
dnl# - but are these also defined for other systems?

dnl# hack to find if this is SVR4 -- who knows?
dnl## AC_MSG_CHECKING(for SVR4)
dnl## AC_EGREP_CPP(yes,
dnl## [#if defined (SVR4) || defined (_SVR4) || defined (__svr4__)
dnl##   yes;
dnl## #endif
dnl## ], [AC_MSG_RESULT(yes); AC_DEFINE(PERHAPS_SVR4)], AC_MSG_RESULT(perhaps not?))

AC_PATH_XTRA

dnl# the only reasonable way to find libXpm is do-it-yourself
dnl# only check if we want xpm-background

if test x$support_xpm = xyes; then
  VT_FIND_LIBXPM
  if test x$no_xpm = xyes; then
    support_xpm=needsmanualspecification
  fi
fi

dnl# --------------------------------------------------------------------------
dnl# CHECKING FOR HEADER FILES
dnl# --------------------------------------------------------------------------
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS( \
	assert.h \
	fcntl.h \
	grp.h \
	libc.h \
	lastlog.h \
	stdarg.h \
	stdlib.h \
	string.h \
	termios.h \
	unistd.h \
	sys/byteorder.h \
	sys/ioctl.h \
	sys/select.h \
	sys/sockio.h \
	sys/time.h \
)

AC_HEADER_TIME

dnl# ELF systems may want to store paths for dynamic libraries.
dnl# Lets see if the compiler can accept "-Rpath" or "-Wl,-Rpath"
dnl# At least one version of SunOS wants "-R path" but it's not checked yet.
if test -n "$GCC"; then
  LDARG="-Wl,"
else
  LDARG=""
fi
changequote(, )dnl
R_TRANSLATE='s/-L\([^ ]*\)/-L\1 '$LDARG'-R\1/g'
changequote([, ])dnl

SAVETHECFLAGS=$CFLAGS
SAVETHELIBS=$LIBS
CFLAGS="$CFLAGS $X_CFLAGS"
LIBS=`echo "$LIBS $X_LIBS $X_EXTRA_LIBS -lX11" | sed "$R_TRANSLATE"`
AC_CACHE_CHECK([for -R dynamic library path recording], rxvt_cv_R,
[AC_TRY_RUN([
#include <X11/X.h>
main()
{
    (void) XOpenDisplay("local:0.0");
}], rxvt_cv_R=yes, rxvt_cv_R=no, dnl                  
  AC_MSG_WARN([You may need to check the LIBS line]))])             
if test x$rxvt_cv_R != xyes; then
  LIBS="$SAVETHELIBS $X_LIBS $X_EXTRA_LIBS -lX11"
fi

AC_CACHE_CHECK([for XPointer], rxvt_cv_xpointer,
[AC_TRY_COMPILE([#include <X11/Xlib.h>], [XPointer dummy;],
rxvt_cv_xpointer=yes, rxvt_cv_xpointer=no)])
if test x$rxvt_cv_xpointer = xyes; then
  AC_DEFINE(HAVE_XPOINTER)
fi
LIBS=$SAVETHELIBS
CFLAGS=$SAVETHECFLAGS


AC_C_CONST
AC_C_INLINE

dnl> AC_HEADER_STDC	 dnl# skip this test, Sun always fails anyhow.

dnl# --------------------------------------------------------------------------
dnl# CHECKING FOR MISSING TYPEDEFS
dnl# --------------------------------------------------------------------------
dnl# Missing typedefs and replacements
AC_TYPE_MODE_T
dnl> AC_CHECK_TYPE(umode_t, int)
dnl> AC_CHECK_TYPE(off_t, long)
AC_TYPE_PID_T
AC_TYPE_UID_T


AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(long long, 8)
AC_CHECK_SIZEOF(int *, 4)
dnl# ugly
if test x$cross_compiling = xyes; then
    AC_MSG_WARN(Define typedefs in src/rsizes.h manually if necessary)
fi

dnl# see usage below
AC_DEFUN(RXVT_CHECK_SIZE,
  [AC_CACHE_CHECK([for $2], $1,
    [AC_TRY_COMPILE([#include <sys/types.h>], $2 dummy;,
      [$1=yes],
      [if test $ac_cv_sizeof_char -ge $3; then
        $1="$4 char"
      else
        if test $ac_cv_sizeof_short -ge $3; then
          $1="$4 short"
        else
          if test $ac_cv_sizeof_int -ge $3; then
            $1="$4 int"
          else
            if test $ac_cv_sizeof_long -ge $3; then
              $1="$4 long"
            else
              if test $ac_cv_sizeof_long_long -ge $3; then
                $1="$4 long long"
              else
                $1="$4 long" # we _must_ have a (possibly wrong) default
              fi
            fi
          fi
        fi
      fi
      ])
    ])
  ]
  if test x"$$1" != xyes; then
    $5="typedef $$1 $2;"
  fi
  )
dnl#
dnl# Look for types the system may know about anyway.
dnl#
RXVT_CHECK_SIZE(rxvt_cv_int16_t, int16_t, 2, , rxvt_int16_typedef)
AC_SUBST(rxvt_int16_typedef)
RXVT_CHECK_SIZE(rxvt_cv_u_int16_t, u_int16_t, 2, unsigned, rxvt_u_int16_typedef)
AC_SUBST(rxvt_u_int16_typedef)
RXVT_CHECK_SIZE(rxvt_cv_int32_t, int32_t, 4, , rxvt_int32_typedef)
AC_SUBST(rxvt_int32_typedef)
RXVT_CHECK_SIZE(rxvt_cv_u_int32_t, u_int32_t, 4, unsigned, rxvt_u_int32_typedef)
AC_SUBST(rxvt_u_int32_typedef)
RXVT_CHECK_SIZE(rxvt_cv_int64_t, int64_t, 8, , rxvt_int64_typedef)
AC_SUBST(rxvt_int64_typedef)
RXVT_CHECK_SIZE(rxvt_cv_u_int64_t, u_int64_t, 8, unsigned, rxvt_u_int64_typedef)
AC_SUBST(rxvt_u_int64_typedef)
dnl#
dnl# Now look for another we use
dnl#
if test $ac_cv_sizeof_int_p -eq 8; then
  rxvt_intp_define="#define intp_t int64_t"
  rxvt_u_intp_define="#define u_intp_t u_int64_t"
else
  if test $ac_cv_sizeof_int_p -eq 4; then
    rxvt_intp_define="#define intp_t int32_t"
    rxvt_u_intp_define="#define u_intp_t u_int32_t"
  else
    if test $ac_cv_sizeof_int_p -eq 2; then
      rxvt_intp_define="#define intp_t int16_t"
      rxvt_u_intp_define="#define u_intp_t u_int16_t"
    else
      rxvt_intp_define="#error set intp_t"
      rxvt_u_intp_define="#error set u_intp_t"
    fi
  fi
fi
AC_SUBST(rxvt_intp_define)
AC_SUBST(rxvt_u_intp_define)

dnl# --------------------------------------------------------------------------
dnl# CHECKING FOR LIBRARY FUNCTIONS
dnl# --------------------------------------------------------------------------
AC_TYPE_SIGNAL
dnl> AC_FUNC_VPRINTF
AC_CHECK_FUNCS( \
	atexit \
	revoke \
	unsetenv \
	setutent \
	seteuid \
	setreuid \
	setsid \
	setpgrp \
	setpgid \
	_getpty \
	grantpt \
	unlockpt \
)

if test x$support_utmp = xyes; then
dnl# --------------------------------------------------------------------------
dnl# DO ALL UTMP AND WTMP CHECKING
dnl# --------------------------------------------------------------------------
dnl# check for host field in utmp structure

dnl# --------------------------------------------
AC_CHECK_HEADER(utmp.h,
[AC_CACHE_CHECK([for struct utmp], rxvt_cv_struct_utmp,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <utmp.h>],
[struct utmp ut;],
rxvt_cv_struct_utmp=yes, rxvt_cv_struct_utmp=no)])
if test x$rxvt_cv_struct_utmp = xyes; then
  AC_DEFINE(HAVE_STRUCT_UTMP)
fi
]

AC_CACHE_CHECK(for host in utmp struct, rxvt_cv_struct_utmp_host,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <utmp.h>],
[struct utmp ut; ut.ut_host;],
rxvt_cv_struct_utmp_host=yes, rxvt_cv_struct_utmp_host=no)])
if test x$rxvt_cv_struct_utmp_host = xyes; then
  AC_DEFINE(HAVE_UTMP_HOST)
fi

dnl# find utmp
AC_CACHE_CHECK(where utmp is located, rxvt_cv_path_utmp,
[AC_TRY_RUN([#include <stdio.h>
#include <utmp.h>
#include <errno.h>
main()
{
changequote(, )dnl
    char **u, *utmplist[] = {
changequote([, ])dnl
#ifdef UTMP_FILE
	UTMP_FILE,
#endif
#ifdef _PATH_UTMP
	_PATH_UTMP,
#endif
    "/var/run/utmp", "/var/adm/utmp", "/etc/utmp", "/usr/etc/utmp", "/usr/adm/utmp", NULL };
    FILE *a, *f=fopen("conftestval", "w");
    if (!f) exit(1);
    for (u = utmplist; *u; u++) {
	if ((a = fopen(*u, "r")) != NULL || errno == EACCES) {
	    fprintf(f, "%s\n", *u);
	    exit(0);
	}
    }
    exit(0);
}], rxvt_cv_path_utmp=`cat conftestval`, rxvt_cv_path_utmp=, dnl
  AC_MSG_WARN([Define/undefine RXVT_UTMP_FILE in config.h manually]))])
if test x${rxvt_cv_path_utmp} != x; then
  AC_DEFINE_UNQUOTED(RXVT_UTMP_FILE, "$rxvt_cv_path_utmp")
fi

) dnl finished if HAVE_UTMP_H

dnl# --------------------------------------------

AC_CHECK_HEADER(utmpx.h,
[AC_CACHE_CHECK([for struct utmpx], rxvt_cv_struct_utmpx,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <utmpx.h>],
[struct utmpx ut;],
rxvt_cv_struct_utmpx=yes, rxvt_cv_struct_utmpx=no)])
if test x$rxvt_cv_struct_utmpx = xyes; then
  AC_DEFINE(HAVE_STRUCT_UTMPX)
fi
]

AC_CACHE_CHECK(for host in utmpx struct, rxvt_cv_struct_utmpx_host,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <utmpx.h>],
[struct utmpx ut; utx.ut_host;],
rxvt_cv_struct_utmpx_host=yes, rxvt_cv_struct_utmpx_host=no)])
if test x$rxvt_cv_struct_utmpx_host = xyes; then
  AC_DEFINE(HAVE_UTMPX_HOST)
fi


dnl# find utmpx - if a utmp file exists at the same location and is more than
dnl# an hour newer, then dump the utmpx.  People leave lots of junk around.
AC_CACHE_CHECK(where utmpx is located, rxvt_cv_path_utmpx,
[AC_TRY_RUN([#include <stdio.h>
#include <utmpx.h>
#include <errno.h>
#include <sys/stat.h>
#ifdef HAVE_STRING_H
#include <string.h>
#endif
main()
{
changequote(, )dnl
    char **u, *p, *utmplist[] = {
changequote([, ])dnl
#ifdef UTMPX_FILE
	UTMPX_FILE,
#endif
    "/var/adm/utmpx", "/etc/utmpx", NULL };
    FILE *a, *f=fopen("conftestval", "w");
    struct stat statu, statux;
    if (!f) exit(1);
    for (u = utmplist; *u; u++) {
	if ((a = fopen(*u, "r")) != NULL || errno == EACCES) {
	    if (stat(*u, &statux) < 0)
		continue;
	    p = strdup(*u);
changequote(, )dnl
	    p[strlen(p) - 1] = '\0';
changequote([, ])dnl
	    if (stat(p, &statu) >= 0
		&& (statu.st_mtime - statux.st_mtime > 3600))
		continue;
	    fprintf(f, "%s\n", *u);
	    exit(0);
	}
    }
    exit(0);
}], rxvt_cv_path_utmpx=`cat conftestval`, rxvt_cv_path_utmpx=, dnl
  AC_MSG_WARN([Define/undefine RXVT_UTMPX_FILE in config.h manually]))])
if test x${rxvt_cv_path_utmpx} != x; then
  AC_DEFINE_UNQUOTED(RXVT_UTMPX_FILE, "$rxvt_cv_path_utmpx")
fi

) dnl finished if HAVE_UTMPX_H

dnl# --------------------------------------------

dnl# find wtmp
AC_CACHE_CHECK(where wtmp is located, rxvt_cv_path_wtmp,
[AC_TRY_RUN([#include <stdio.h>
#ifdef HAVE_UTMPX_H
#include <utmpx.h>
#endif
#ifdef HAVE_UTMP_H
#include <utmp.h>
#endif
#include <errno.h>
main()
{
    char **w, *wtmplist[] = {
#ifdef WTMPX_FILE
	WTMPX_FILE,
#endif
#ifdef WTMP_FILE
	WTMP_FILE,
#endif
#ifdef _PATH_WTMP
	_PATH_WTMP,
#endif
    "/var/log/wtmp", "/var/adm/wtmp", "/etc/wtmp", "/usr/etc/wtmp", "/usr/adm/wtmp", NULL }; 
    FILE *a, *f=fopen("conftestval", "w");
    if (!f) exit(1);
    for (w = wtmplist; *w; w++) {
	if ((a = fopen(*w, "r")) != NULL || errno == EACCES) {
	    fprintf(f, "%s\n", *w);
	    exit(0);
	}
    }
    exit(0);
}], rxvt_cv_path_wtmp=`cat conftestval`, rxvt_cv_path_wtmp=, dnl
  AC_MSG_WARN([Define/undefine RXVT_WTMP_FILE in config.h manually]))])
if test x${rxvt_cv_path_wtmp} != x; then
  AC_DEFINE_UNQUOTED(RXVT_WTMP_FILE, "$rxvt_cv_path_wtmp")
fi

dnl# find wtmpx
AC_CACHE_CHECK(where wtmpx is located, rxvt_cv_path_wtmpx,
[AC_TRY_RUN([#include <stdio.h>
#ifdef HAVE_UTMPX_H
#include <utmpx.h>
#endif
#include <errno.h>
main()
{
    char **w, *wtmplist[] = {
#ifdef WTMPX_FILE
	WTMPX_FILE,
#endif
    "/var/log/wtmpx", "/var/adm/wtmpx", NULL }; 
    FILE *a, *f=fopen("conftestval", "w");
    if (!f) exit(1);
    for (w = wtmplist; *w; w++) {
	if ((a = fopen(*w, "r")) != NULL || errno == EACCES) {
	    fprintf(f, "%s\n", *w);
	    exit(0);
	}
    }
    exit(0);
}], rxvt_cv_path_wtmpx=`cat conftestval`, rxvt_cv_path_wtmpx=, dnl
  AC_MSG_WARN([Define/undefine RXVT_WTMPX_FILE in config.h manually]))])
if test x${rxvt_cv_path_wtmpx} != x; then
  AC_DEFINE_UNQUOTED(RXVT_WTMPX_FILE, "$rxvt_cv_path_wtmpx")
fi

fi
dnl# --------------------------------------------------------------------------
dnl# check for struct lastlog
AC_CACHE_CHECK(for struct lastlog, rxvt_cv_struct_lastlog,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <utmp.h>
#ifdef HAVE_LASTLOG_H
#include <lastlog.h>
#endif
],
[struct lastlog ll;],
rxvt_cv_struct_lastlog=yes, rxvt_cv_struct_lastlog=no)])
if test x$rxvt_cv_struct_lastlog = xyes; then
  AC_DEFINE(HAVE_STRUCT_LASTLOG)
fi

dnl# find lastlog
AC_CACHE_CHECK(where lastlog is located, rxvt_cv_path_lastlog,
[AC_TRY_RUN([#include <stdio.h>
#ifdef HAVE_UTMPX_H
#include <utmpx.h>
#elif defined(HAVE_UTMP_H)
#include <utmp.h>
#endif
#ifdef HAVE_LASTLOG_H
#include <lastlog.h>
#endif
#include <errno.h>
main()
{
    char **w, *lastloglist[] = {
#ifdef _PATH_LASTLOG
	_PATH_LASTLOG,
#endif
    "/var/log/lastlog", NULL };
    FILE *a, *f=fopen("conftestval", "w");
    if (!f) exit(1);
    for (w = lastloglist; *w; w++) {
	if ((a = fopen(*w, "r")) != NULL || errno == EACCES) {
	    fprintf(f, "%s\n", *w);
	    exit(0);
	}
    }
    exit(0);
}], rxvt_cv_path_lastlog=`cat conftestval`, rxvt_cv_path_lastlog=, dnl
  AC_MSG_WARN([Define/undefine RXVT_LASTLOG_FILE in config.h manually]))])
if test x${rxvt_cv_path_lastlog} != x; then
  AC_DEFINE_UNQUOTED(RXVT_LASTLOG_FILE, "$rxvt_cv_path_lastlog")
  if test -d "${rxvt_cv_path_lastlog}"; then
    AC_DEFINE(LASTLOG_IS_DIR)
  fi
fi

dnl# --------------------------------------------------------------------------

dnl# find ttys/ttytab
AC_CACHE_CHECK(where ttys/ttytab is located, rxvt_cv_path_ttytab,
[for ttys_file in   dnl
  /etc/ttys /etc/ttytab;
do
  if test -f "$ttys_file" ; then 
    rxvt_cv_path_ttytab=$ttys_file
    break
  fi
done
])
if test x${rxvt_cv_path_ttytab} != x; then
  AC_DEFINE_UNQUOTED(TTYTAB_FILENAME, "$rxvt_cv_path_ttytab")
fi

dnl# this is a really hack test for some basic Xlocale stuff
SAVETHELIBS=$LIBS
SAVETHECFLAGS=$CFLAGS
CFLAGS="$CFLAGS $X_CFLAGS"
LIBS="$LIBS $X_LIBS $X_EXTRA_LIBS -lX11"
if test x$rxvt_cv_R = xyes; then
  LIBS=`echo $LIBS | sed "$R_TRANSLATE"`
fi
AC_CACHE_CHECK(for working Xlocale, rxvt_cv_func_xlocale,
[AC_TRY_RUN([#include <X11/Xlib.h>
main() {
char *p;
if ((p = XSetLocaleModifiers("@im=none")) != NULL && *p)
exit (XSupportsLocale() ? 0 : 1);
else
exit (1);}],  dnl
  rxvt_cv_func_xlocale=yes, rxvt_cv_func_xlocale=no,  dnl
  AC_MSG_WARN([Define/undefine NO_XLOCALE in config.h manually]))])
if test x${rxvt_cv_func_xlocale} = xno; then
  AC_DEFINE(NO_XLOCALE)
fi

AC_CACHE_CHECK(for working X setlocale, rxvt_cv_func_xsetlocale,
[AC_TRY_LINK([#define X_LOCALE 1
#include <X11/Xlocale.h>],
  [setlocale(LC_CTYPE, "");],
  rxvt_cv_func_xsetlocale=yes, rxvt_cv_func_xsetlocale=no)])
if test x${rxvt_cv_func_xsetlocale} = xno; then
  AC_DEFINE(NO_XSETLOCALE)
fi
LIBS=$SAVETHELIBS
CFLAGS=$SAVETHECFLAGS

AC_CACHE_CHECK(for working plain setlocale, rxvt_cv_func_setlocale,
[AC_TRY_LINK([#include <locale.h>],
  [setlocale(LC_CTYPE, "");],
  rxvt_cv_func_setlocale=yes, rxvt_cv_func_setlocale=no)])
if test x${rxvt_cv_func_setlocale} = xno; then
  AC_DEFINE(NO_SETLOCALE)
fi

AC_CACHE_CHECK(for getpt, rxvt_cv_func_getpt,
[AC_TRY_LINK([#define _GNU_SOURCE
#ifdef HAVE_STDLIB_H
# include <stdlib.h>
#endif],
  [(void)getpt();],
  rxvt_cv_func_getpt=yes, rxvt_cv_func_getpt=no)])
if test x${rxvt_cv_func_getpt} = xyes; then
  AC_DEFINE(HAVE_GETPT)
fi

# if we don't guess right then it's up to the user
AC_CACHE_CHECK(for tty/pty type, rxvt_cv_ptys,
[AC_TRY_RUN([#include <stdio.h>
#ifdef HAVE_STDLIB_H
# ifdef HAVE_GETPT
#  define _GNU_SOURCE
# endif
# include <stdlib.h>
#endif
#ifdef HAVE_FCNTL_H
# include <fcntl.h>
#endif
#include <sys/stat.h>
#include <errno.h>
main()
{
    int pty, checkerror;
    FILE *a, *f=fopen("conftestval", "w");
    struct stat statbuf;
    extern int errno;

    if (!f) exit(1);
/* presume that S_IXOTH is required for people to access devices */
    if (stat("/dev", &statbuf) < 0)
	checkerror = 0;
    else
	checkerror = ((statbuf.st_mode & S_IXOTH) == S_IXOTH) ? 1 : 0;
#if defined(__sgi) || defined(sgi) || defined(__sgi__)
    if (stat("/dev/ptc", &statbuf) >= 0)
# ifdef HAVE__GETPTY
	fprintf(f, "SGI4");
# else
	fprintf(f, "SGI3");
# endif
    else
	fprintf(f, "SGI4");
    exit(0);
#endif
#ifdef _SCO_DS
    if (stat("/dev/ttyp20", &statbuf) == 0) {
	fprintf(f, "SCO");
	exit(0);
    }
#endif
/* HPUX: before ptmx */
    pty = open("/dev/ptym/clone", O_RDWR);
    if (pty >= 0 || (checkerror && errno == EACCES)) {
	fprintf(f, "HPUX");
	exit(0);
    }
#if defined(HAVE_GRANTPT) && defined(HAVE_UNLOCKPT)
# ifdef HAVE_GETPT
    pty = getpt();
    if (pty >= 0 || errno == EACCES) {
	fprintf(f, "GLIBC");
	exit(0);
    }
# endif
    if (stat("/dev/ptmx", &statbuf) >= 0
	&& ((statbuf.st_mode & S_IFCHR) == S_IFCHR))
	if (stat("/dev/pts/0", &statbuf) >= 0
	    && ((statbuf.st_mode & S_IFCHR) == S_IFCHR)
	    && ((pty = open("/dev/ptmx", O_RDWR)) >= 0
		|| (checkerror && errno == EACCES))) {
	    fprintf(f, "USG");
	    exit(0);
    }
#endif
    if (stat("/dev/ttyp20", &statbuf) == 0) {
	fprintf(f, "SCO");
	exit(0);
    }
    fprintf(f, "BSD");
    exit(0);
}], rxvt_cv_ptys=`cat conftestval`, rxvt_cv_ptys=UNKNOWN, dnl
  AC_MSG_WARN([Define/undefine PTYS_ARE_* in config.h manually]))])

if test x${rxvt_cv_ptys} = xSCO; then
  AC_DEFINE(PTYS_ARE_NUMERIC)
  AC_SUBST(PTYS_ARE_NUMERIC)
fi
if test x${rxvt_cv_ptys} = xUSG; then
  AC_DEFINE(PTYS_ARE_PTMX)
  AC_SUBST(PTYS_ARE_PTMX)
  AC_DEFINE(PTYS_ARE_SEARCHED)
  AC_SUBST(PTYS_ARE_SEARCHED)
fi
if test x${rxvt_cv_ptys} = xSGI3; then
  AC_DEFINE(PTYS_ARE_PTC)
  AC_SUBST(PTYS_ARE_PTC)
fi
if test x${rxvt_cv_ptys} = xSGI4; then
  AC_DEFINE(PTYS_ARE__GETPTY)
  AC_SUBST(PTYS_ARE__GETPTY)
fi
if test x${rxvt_cv_ptys} = xCONVEX; then
  AC_DEFINE(PTYS_ARE_GETPTY)
  AC_SUBST(PTYS_ARE_GETPTY)
fi
if test x${rxvt_cv_ptys} = xGLIBC; then
  AC_DEFINE(PTYS_ARE_GETPT)
  AC_SUBST(PTYS_ARE_GETPT)
  AC_DEFINE(PTYS_ARE_SEARCHED)
  AC_SUBST(PTYS_ARE_SEARCHED)
fi
if test x${rxvt_cv_ptys} = xHPUX; then
  AC_DEFINE(PTYS_ARE_CLONE)
  AC_SUBST(PTYS_ARE_CLONE)
  AC_DEFINE(PTYS_ARE_SEARCHED)
  AC_SUBST(PTYS_ARE_SEARCHED)
fi
if test x${rxvt_cv_ptys} = xBSD; then
  AC_DEFINE(PTYS_ARE_SEARCHED)
  AC_SUBST(PTYS_ARE_SEARCHED)
fi

dnl# FreeBSD needs to link libxpg4
AC_CHECK_LIB(xpg4, setlocale, [LIBS="$LIBS -lxpg4"])

dnl> AC_CHECK_FUNCS(gettimeofday putenv select socket)

CFLAGS=${CFLAGS--O}
LDFLAGS=${LDFLAGS--O}

CPPFLAGS="$CPPFLAGS"
AC_SUBST(DEBUG)
AC_SUBST(DINCLUDE)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(X_CFLAGS)

dnl# Attack the libs
if test x$rxvt_cv_R = xyes; then
  DLIB=`echo $DLIB | sed "$R_TRANSLATE"`
  LIBS=`echo $LIBS | sed "$R_TRANSLATE"`
  X_LIBS=`echo $X_LIBS | sed "$R_TRANSLATE"`
  X_EXTRA_LIBS=`echo $X_EXTRA_LIBS | sed "$R_TRANSLATE"`
fi
AC_SUBST(DLIB)
AC_SUBST(LIBS)
AC_SUBST(X_LIBS)
AC_SUBST(X_EXTRA_LIBS)

if test x$support_addstrings = xyes; then
    OBJSTRINGS="strings.o"
else
    AC_DEFINE(NO_STRINGS)
fi
OBJLIST="command.o $OBJGRAPHICS $OBJGRKELOT $OBJLOGGING main.o $OBJMENUBAR misc.o netdisp.o screen.o scrollbar.o rxvt_res.o $OBJSTRINGS xdefaults.o $OBJXPM"
AC_SUBST(OBJLIST)

dnl# common parts of the Makefile
MCOMMON=./autoconf/Make.common
AC_SUBST_FILE(MCOMMON)

AC_OUTPUT(autoconf/Make.common \
Makefile \
doc/Makefile \
src/Makefile \
src/graphics/Makefile \
src/test/Makefile \
src/rsizes.h \
rclock/Makefile \
)

echo "Configuration:

  Rxvt version:               ${VERSION} : ${DATE}
  Source code location:       ${srcdir}
  Install path:               ${prefix}/bin
  Compiler:                   ${CC}
  Compiler flags:             ${CFLAGS}"

if test "$MALLOC_TYPE" = S; then
  echo "  malloc support:             system default"
fi
if test "$MALLOC_TYPE" = G; then
  echo "  malloc support:             Gray Watson's dmalloc"
fi
if test "$MALLOC_TYPE" = D; then
  echo "  malloc support:             Doug Lea's malloc"
fi

if test x${support_xpm} = xyes; then
  echo "  Xpm library:                ${XPM_LIBS}"
fi

echo "
Adding modules:"
if test x$OBJGRAPHICS != x; then HASIT="yes"; else HASIT="no"; fi
echo "  graphics.o:                 "$HASIT
if test x$OBJGRKELOT != x; then HASIT="yes"; else HASIT="no"; fi
echo "  grkelot.o:                  "$HASIT
if test x$OBJLOGGING != x; then HASIT="yes"; else HASIT="no"; fi
echo "  logging.o:                  "$HASIT
if test x$OBJMENUBAR != x; then HASIT="yes"; else HASIT="no"; fi
echo "  menubar.o:                  "$HASIT
if test x$OBJSTRINGS != x; then HASIT="yes"; else HASIT="no"; fi
echo "  strings.o:                  "$HASIT
if test x$OBJXPM != x; then HASIT="yes"; else HASIT="no"; fi
echo "  xpm.o:                      "$HASIT
echo "
The following are set in config.h
"
echo "  multichar glyph languages:  "${multichar_set}
echo "  pty/tty type:               "${rxvt_cv_ptys}
if test x${support_utmp} != xyes; then
  echo "  utmp support:               disabled
"
else
  echo "  utmp support:               enabled
  utmp file:                  ${rxvt_cv_path_utmp}
  utmpx file:                 ${rxvt_cv_path_utmpx}
  wtmp file:                  ${rxvt_cv_path_wtmp}
  wtmpx file:                 ${rxvt_cv_path_wtmpx}
  lastlog file:               ${rxvt_cv_path_lastlog}
  ttys/ttytab file:           ${rxvt_cv_path_ttytab}
"
fi
if test x${term} != x; then
  echo "  set TERM to:                ${term}
"
fi
if test x${terminfo} != x; then
  echo "  set TERMINFO to:            ${terminfo}
"
fi
if test x${rxvt_cv_ptys} = xUNKNOWN; then
  echo ".----------------------------------------------------------------."
  echo ". WARNING: could not determine tty/pty type.  Do not build until ."
  echo ".          the appropriate PTYS_ARE_* is defined in config.h     ."
  echo ".----------------------------------------------------------------."
fi
if test x${support_xpm} = xneedsmanualspecification; then
  echo ".----------------------------------------------------------------."
  echo ". WARNING: --enable-xpm-background was specified, however the    ."
  echo ".          XPM includes files and libraries could not be found.  ."
  echo ".          XPM backgrounds are now being DISABLED!  If you want  ."
  echo ".          to use them you should rerun   configure   with the   ."
  echo ".          appropriate --with-xpm-includes=/path/to/xpm/includes ."
  echo ".          and --with-xpm-library=/path/to/xpm/library lines.    ."
  echo ".----------------------------------------------------------------."
fi
echo "  *** Please check src/feature.h for further options ***
"
